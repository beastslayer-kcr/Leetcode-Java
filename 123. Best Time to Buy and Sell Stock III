class Solution {
    public int maxProfit(int[] prices) {
        int n = prices.length;
        
		int[] pmin = new int[n+1], prefix_profit = new int[n+1];
		pmin[0] = prices[0];
		for(int i=1;i<n;i++) pmin[i] = Math.min(pmin[i-1], prices[i]);
		prefix_profit[0] = 0;
		for(int i=1;i<n;i++) {
			int curr_max = prices[i] - pmin[i];
			prefix_profit[i] = Math.max(prefix_profit[i - 1], curr_max);
		}
		int[] smax = new int[n];
		smax[n-1] = prices[n-1];
		for(int i=n-2;i>=0;i--) smax[i] = Math.max(smax[i+1],prices[i]);
		
		int[] suffix_profit = new int[n+1];
		suffix_profit[n-1] = 0;
		for(int i=n-2;i>=0;i--) {
			int curr_max = smax[i+1] - prices[i];
			suffix_profit[i] = Math.max(suffix_profit[i+1],curr_max);
		}
		int profit = suffix_profit[0];
		for(int i=1;i<n;i++) {
			int curr_profit = prefix_profit[i-1] + suffix_profit[i];
			profit = Math.max(curr_profit,profit);
		}
        return profit;
    }
}
